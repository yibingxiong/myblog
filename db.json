{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/aircloud/source/js/index.js","path":"js/index.js","modified":1,"renderable":1},{"_id":"themes/aircloud/source/css/aircloud.css","path":"css/aircloud.css","modified":1,"renderable":1},{"_id":"themes/aircloud/source/css/aircloud.less","path":"css/aircloud.less","modified":1,"renderable":1},{"_id":"themes/aircloud/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/aircloud/source/js/gitment.js","path":"js/gitment.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/aircloud/_config.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530976431690},{"_id":"themes/aircloud/LICENSE","hash":"278d4c4d923734a79286b3a5b524723c107c132a","modified":1530962183831},{"_id":"themes/aircloud/readme-en.md","hash":"ca8b8b2dd70afb225319551a3d4a40b3784a6519","modified":1530962183840},{"_id":"themes/aircloud/readme.md","hash":"8f95a3898ee25e814c9301d7cc6893db196c0669","modified":1530962668173},{"_id":"themes/aircloud/layout/catagory.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530962183837},{"_id":"themes/aircloud/layout/page.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530962183838},{"_id":"source/_posts/ES6-代理.md","hash":"5641600ddca9394b1afee9ee5d5216943c883384","modified":1533479659521},{"_id":"source/_posts/ES6-模块.md","hash":"1ff10f733321fea0c6f26b8305edf803cc87e3ca","modified":1533479659521},{"_id":"source/_posts/hexo操作指南.md","hash":"5a9e56a799f9112a285813bfc714b24f80bc6cb0","modified":1530967251188},{"_id":"source/_posts/redux-saga学习笔记.md","hash":"c7eae58688505ef1951d2d249f36823733eb0a46","modified":1533475866771},{"_id":"source/_posts/redux学习笔记.md","hash":"c09d951486eb8464c29f456acee44885c25f042c","modified":1533478886983},{"_id":"source/about/index.md","hash":"085ed1a9e410370d86681d40a10db0c46745b73f","modified":1530966977007},{"_id":"source/_posts/记一次苦逼的找bug经历.md","hash":"bbecab0e2c9743f04ee77be5e7e89e9c85df9e95","modified":1533479659521},{"_id":"source/tags/index.md","hash":"77b914be60deb959b592786410ff3b6aed1b1ca5","modified":1530967121251},{"_id":"themes/aircloud/layout/404.ejs","hash":"51ac993ccbd409d7bfe0deee0de8015a89b5a15c","modified":1530962183833},{"_id":"themes/aircloud/layout/about.ejs","hash":"899e614ea5a24450139bd00b921b6bfee027d3fa","modified":1530962183836},{"_id":"themes/aircloud/layout/archive.ejs","hash":"70a4b23108d79ed91963c2f688401a8124a02f3c","modified":1530962183837},{"_id":"themes/aircloud/layout/index.ejs","hash":"b767ffa93b488bf05de7f5fc77bee4cde6ca3ec1","modified":1530962183837},{"_id":"themes/aircloud/layout/layout.ejs","hash":"d20b6ca889dd24f1ae8c98fa665904c3a62da7d5","modified":1530962183838},{"_id":"themes/aircloud/layout/post.ejs","hash":"7ac55c8154a0d0c5630f7dbb1997aedaf66cc021","modified":1530962183839},{"_id":"themes/aircloud/layout/tags.ejs","hash":"2691f60b0067f110ebcb8cd5f15b8f8d79a82512","modified":1530962183839},{"_id":"themes/aircloud/languages/en.yml","hash":"8326653662ab628d33289c7fdaea3701274bb6fa","modified":1530962183832},{"_id":"themes/aircloud/languages/zh.yml","hash":"6c30c31f4ec188949caab414aa81296f3f49df53","modified":1530962183833},{"_id":"themes/aircloud/source/_less/about.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530962183842},{"_id":"themes/aircloud/source/_less/about.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530962183843},{"_id":"themes/aircloud/source/_less/diff.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530962183845},{"_id":"themes/aircloud/source/_less/diff.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530962183845},{"_id":"themes/aircloud/source/_less/page.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530962183850},{"_id":"themes/aircloud/source/_less/page.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530962183851},{"_id":"themes/aircloud/source/_less/theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530962183853},{"_id":"themes/aircloud/source/_less/theme.less","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530962183853},{"_id":"themes/aircloud/layout/_partial/donate.ejs","hash":"d97224a63f76045cbd0a53a3cabef3f0fd010ad3","modified":1530962183834},{"_id":"themes/aircloud/layout/_partial/footer.ejs","hash":"236e217c976680136272652332f29fa4dca37131","modified":1530962183834},{"_id":"themes/aircloud/layout/_partial/head.ejs","hash":"f2efb1f71199e44f1986d2f4723191fa728b332a","modified":1530962183835},{"_id":"themes/aircloud/layout/_partial/toc.ejs","hash":"20106463b4885e93ef69122d69464174c45df71d","modified":1530962183836},{"_id":"themes/aircloud/layout/_partial/nav.ejs","hash":"1827989916f05dfa0243b11af34a58845ebd445b","modified":1530962183835},{"_id":"themes/aircloud/source/_less/archive.css","hash":"372da40133108078c91c3fc73b361aa81436248f","modified":1530962183843},{"_id":"themes/aircloud/source/_less/archive.less","hash":"b27c479274d648918f29452aae8139bafe997804","modified":1530962183843},{"_id":"themes/aircloud/source/_less/common.css","hash":"6a9639f0b4580210dc4a9d3e83da10818f7a74b7","modified":1530962183844},{"_id":"themes/aircloud/source/_less/common.less","hash":"7bc32765d9a2c0f58d0d26ee149a757c95bd701c","modified":1530962183844},{"_id":"themes/aircloud/source/_less/donate.less","hash":"efaf3572a73c26aff77331e18543b6b2336931c0","modified":1530962183846},{"_id":"themes/aircloud/source/_less/donate.css","hash":"d5c94d24c9ea63b1c2eb186a333f07a28a1f88a6","modified":1530962183846},{"_id":"themes/aircloud/source/_less/gitment.css","hash":"01fdbed1c91ed4bd685886c298383809a0c5f1d7","modified":1530962183846},{"_id":"themes/aircloud/source/_less/gitment.less","hash":"f6f18d9e7451c501234a1d2166813edae63cd7d5","modified":1530962183847},{"_id":"themes/aircloud/source/_less/hightlight.css","hash":"d6a57167162eaa7f1b64f83c583a212f33aba586","modified":1530962183847},{"_id":"themes/aircloud/source/_less/index.css","hash":"8853826ff7e2f679f481f7de6cd742d9aaf76778","modified":1530962183848},{"_id":"themes/aircloud/source/_less/layout.css","hash":"a4696cb13b67fc943f0f91b8a955871c7a141158","modified":1530962183849},{"_id":"themes/aircloud/source/_less/hightlight.less","hash":"d6a57167162eaa7f1b64f83c583a212f33aba586","modified":1530962183848},{"_id":"themes/aircloud/source/_less/layout.less","hash":"97485205476eff395c0c67c9fb30f979a9a0db0e","modified":1530962183849},{"_id":"themes/aircloud/source/_less/nav.css","hash":"c2466ddb4ca7f617785f86e256ac99cfa946b5aa","modified":1530962183850},{"_id":"themes/aircloud/source/_less/nav.less","hash":"28806217c536610543a2bfbe496b280769de480f","modified":1530962183850},{"_id":"themes/aircloud/source/_less/index.less","hash":"91f05eb476510fcbb2bed556092dfd889656ef0b","modified":1530962183848},{"_id":"themes/aircloud/source/_less/post.less","hash":"071e3e3888f05117a7be51f35ee6ef7764ef86c7","modified":1530962183852},{"_id":"themes/aircloud/source/_less/post.css","hash":"839f87d65d0b7ebf6311609bceb77a217a5e1662","modified":1530962183851},{"_id":"themes/aircloud/source/_less/tag.less","hash":"e75576604e73ce22559ea0ff7816a52f72772219","modified":1530962183853},{"_id":"themes/aircloud/source/_less/tag.css","hash":"bde136456c498eb671ea75c5315130d7dea1d9ba","modified":1530962183852},{"_id":"themes/aircloud/source/_less/toc.css","hash":"f11183d2f2be8aee0ec3827ecb7944df56542833","modified":1530962183854},{"_id":"themes/aircloud/source/_less/toc.less","hash":"df33e60e98c1bd10c4d7b92ce7c6c8a6e8bbb53b","modified":1530962183854},{"_id":"themes/aircloud/source/_less/variables.css","hash":"c5d6ce4d904e7c108fbf4f2392eb2917bed636d8","modified":1530962183854},{"_id":"themes/aircloud/source/_less/variables.less","hash":"33b03ae1a497cb83bb5b548b3260bb19f154dd31","modified":1530962183855},{"_id":"themes/aircloud/source/js/index.js","hash":"7cfe49b96271c6a3816eb73905c44c387e5eef55","modified":1530962183859},{"_id":"themes/aircloud/source/css/aircloud.css","hash":"a48d55e8d2df28cb7870fd48f2fe19a0443755b4","modified":1530962183856},{"_id":"themes/aircloud/source/css/aircloud.less","hash":"cf339e918c04f33837516cf4f54e27640cf48460","modified":1530962183856},{"_id":"themes/aircloud/source/css/gitment.css","hash":"c6951e8c4d709f1917c2cf78b9777d9610cb6532","modified":1530962183857},{"_id":"themes/aircloud/source/_less/_partial/footer.css","hash":"f16591b56878063da3d2869fa90e7c961fc64c72","modified":1530962183841},{"_id":"themes/aircloud/source/_less/_partial/footer.less","hash":"6f8b1ecf6c2c994aafb9a865f005b2606c372d01","modified":1530962183842},{"_id":"themes/aircloud/source/js/gitment.js","hash":"7d7a9c07794fb31fd6d4620e473d05e14e27285d","modified":1530962183858},{"_id":"public/search.json","hash":"e5218494a7c6e399a336060e4172a1cf3acf8ee0","modified":1533479756458},{"_id":"public/about/index.html","hash":"b379ab657105242d0cff8a5e6f96fd614b749a63","modified":1533479756517},{"_id":"public/tags/index.html","hash":"43c2b7a396e054580a143e702cabe78f318bb4ac","modified":1533479756517},{"_id":"public/2018/08/05/redux-saga学习笔记/index.html","hash":"b9fa64276738cc5b0af68d28c0d052b7327243f6","modified":1533479756517},{"_id":"public/2018/08/05/redux学习笔记/index.html","hash":"60fcf12fddd567665a13fa43a2694624a6ad30ad","modified":1533479756517},{"_id":"public/2018/07/09/记一次苦逼的找bug经历/index.html","hash":"5864ae200c2e6971cffb476f6a1b14e47bd272b3","modified":1533479756517},{"_id":"public/2018/07/08/ES6-代理/index.html","hash":"9ec2e88839548614202e8d7d553696cc8112c82f","modified":1533479756517},{"_id":"public/2018/07/07/hexo操作指南/index.html","hash":"4292327d88e85d655acd03885713b5434280f474","modified":1533479756517},{"_id":"public/2018/07/08/ES6-模块/index.html","hash":"b7e0253c85fa4165c2f60ec04874ba86f631ba51","modified":1533479756517},{"_id":"public/archive/index.html","hash":"9c480b4163a645ffd22083b5c16ffa18b63735e5","modified":1533479756517},{"_id":"public/archive/2018/index.html","hash":"9c480b4163a645ffd22083b5c16ffa18b63735e5","modified":1533479756517},{"_id":"public/archive/2018/07/index.html","hash":"9c480b4163a645ffd22083b5c16ffa18b63735e5","modified":1533479756518},{"_id":"public/archive/2018/08/index.html","hash":"9c480b4163a645ffd22083b5c16ffa18b63735e5","modified":1533479756518},{"_id":"public/index.html","hash":"3b7bf304d281efa6bab74f4961eb3f1405fb69e2","modified":1533479756518},{"_id":"public/tags/ES6/index.html","hash":"0ae2985fd420b6c133ec6576555ca6b6f2f0e2b8","modified":1533479756518},{"_id":"public/tags/js/index.html","hash":"0ae2985fd420b6c133ec6576555ca6b6f2f0e2b8","modified":1533479756518},{"_id":"public/tags/坑/index.html","hash":"0ae2985fd420b6c133ec6576555ca6b6f2f0e2b8","modified":1533479756518},{"_id":"public/tags/开发记录/index.html","hash":"0ae2985fd420b6c133ec6576555ca6b6f2f0e2b8","modified":1533479756518},{"_id":"public/css/aircloud.less","hash":"cf339e918c04f33837516cf4f54e27640cf48460","modified":1533479756520},{"_id":"public/js/index.js","hash":"0cf0446b29aa77008fba0a6ee5ef2b88c1483f89","modified":1533479756524},{"_id":"public/css/aircloud.css","hash":"cec33ef8514420fa2b22bf0455396fef9d5bae08","modified":1533479756524},{"_id":"public/css/gitment.css","hash":"926b553be983d6dd90bcb60c5d6d4ee215d268a6","modified":1533479756524},{"_id":"public/js/gitment.js","hash":"89687f8fffe1125e08323fd6635ca4e53771c05e","modified":1533479756524}],"Category":[],"Data":[],"Page":[{"layout":"about","title":"About","date":"2016-04-20T20:48:33.000Z","comments":1,"_content":"\n# hello","source":"about/index.md","raw":"\n---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2016-04-21 04:48:33\ncomments: true\n---\n\n# hello","updated":"2018-07-07T12:36:17.007Z","path":"about/index.html","_id":"cjkgy94f70001egomi5tpo5t3","content":"<h1 id=\"hello\"><a href=\"#hello\" class=\"headerlink\" title=\"hello\"></a>hello</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"hello\"><a href=\"#hello\" class=\"headerlink\" title=\"hello\"></a>hello</h1>"},{"layout":"tags","title":"Tags","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\n---","date":"2018-07-07T12:38:41.251Z","updated":"2018-07-07T12:38:41.251Z","path":"tags/index.html","comments":1,"_id":"cjkgy94fa0003egommp8zf141","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"ES6-代理反射","date":"2018-07-08T04:43:55.000Z","_content":"\n> 学习了ES6中的代理. 代理赋予了开发者访问js底层的一些东西的能力, 还是挺好玩的, 不过有点多, 对比一下.\n\n1. 一些比较\n\n|比较项|反射方法|Object的方法|备注|\n|---|---|---|---|\n|set|Reflect.set(trapTarget, key, value, redeiver)|-|拦截为对象属性赋值|\n|get|Reflect.get(trapTraget, key, receiver)|-|拦截读取对象属性|\n|has|Reflect.has(trapTarget, key)|-|拦截in操作|\n|delete|Reflect.deleteProperty(trapTarget,key)|-|拦截delete操作|\n|setPrototypeOf|Reflect.setPrototypeOf(trapTarget, proto) 底层操作,返回Boolean表示操作是否成功,成功则true,失败则false|Object.setPrototypeOf(trapTarget,proto) 上层操作, 操作失败直接抛出错误|拦截setPrototypeOf操作|\n|getPrototypeOf|Reflect.getPrototypeOf(trapTarget) 参数不是对象直接报错|Object.getPrototypeOf(trapTarget),参数不是对象先转换成对象|拦截getPrototypeOf操作|\n|preventExtensions|Reflect.preventExtensions(trapTarget),参数不是对象报错,参数是对象返回true或false|Object.preventExtensions(trapTarget),返回参数|拦截preventExtensions|\n|isExtensible|Reflect.isExtensible(target) 非对象直接报错|Object.isExtensible(target) 非对象返回false|拦截isExtensible|\n|defineProperty|Reflect.defineProperty(trapTarget, key, descriptor) 返回true或false|Object.defineProperty(trapTarget, key, descriptor) 出错时报错|拦截defineProperty|\n|getOwnPropertyDescriptor|Refect.getOwnPropertyDescriptor(trapTarget,key) 非对象报错|Object.getOwnPropertyDescriptor(trapTarget,key) 非对象转换成对象|enumerable,configurable,value,writable,get,set|\n|ownKeys|Reflect.ownKeys(target)|Object.keys(),Object.getOwnPropertyNames(),Object.assign(),Object.getOwnPropertySymbols()|返回数组就好|\n|apply|Reflect.apply(trapTarget,thisArg,argumentList)|-|拦截函数调用|\n|construct|Reflect.construct(target,argumentList)|-|拦截new调用|\n\n\n2. 创建可撤销的代理\n\n```javascript\nProxy.revocable();  => {proxy, revoke}\n\n调用revoke()即可撤销\n```\n","source":"_posts/ES6-代理.md","raw":"---\ntitle: ES6-代理反射\ndate: 2018-07-08 12:43:55\ntags: [ES6, js]\n---\n\n> 学习了ES6中的代理. 代理赋予了开发者访问js底层的一些东西的能力, 还是挺好玩的, 不过有点多, 对比一下.\n\n1. 一些比较\n\n|比较项|反射方法|Object的方法|备注|\n|---|---|---|---|\n|set|Reflect.set(trapTarget, key, value, redeiver)|-|拦截为对象属性赋值|\n|get|Reflect.get(trapTraget, key, receiver)|-|拦截读取对象属性|\n|has|Reflect.has(trapTarget, key)|-|拦截in操作|\n|delete|Reflect.deleteProperty(trapTarget,key)|-|拦截delete操作|\n|setPrototypeOf|Reflect.setPrototypeOf(trapTarget, proto) 底层操作,返回Boolean表示操作是否成功,成功则true,失败则false|Object.setPrototypeOf(trapTarget,proto) 上层操作, 操作失败直接抛出错误|拦截setPrototypeOf操作|\n|getPrototypeOf|Reflect.getPrototypeOf(trapTarget) 参数不是对象直接报错|Object.getPrototypeOf(trapTarget),参数不是对象先转换成对象|拦截getPrototypeOf操作|\n|preventExtensions|Reflect.preventExtensions(trapTarget),参数不是对象报错,参数是对象返回true或false|Object.preventExtensions(trapTarget),返回参数|拦截preventExtensions|\n|isExtensible|Reflect.isExtensible(target) 非对象直接报错|Object.isExtensible(target) 非对象返回false|拦截isExtensible|\n|defineProperty|Reflect.defineProperty(trapTarget, key, descriptor) 返回true或false|Object.defineProperty(trapTarget, key, descriptor) 出错时报错|拦截defineProperty|\n|getOwnPropertyDescriptor|Refect.getOwnPropertyDescriptor(trapTarget,key) 非对象报错|Object.getOwnPropertyDescriptor(trapTarget,key) 非对象转换成对象|enumerable,configurable,value,writable,get,set|\n|ownKeys|Reflect.ownKeys(target)|Object.keys(),Object.getOwnPropertyNames(),Object.assign(),Object.getOwnPropertySymbols()|返回数组就好|\n|apply|Reflect.apply(trapTarget,thisArg,argumentList)|-|拦截函数调用|\n|construct|Reflect.construct(target,argumentList)|-|拦截new调用|\n\n\n2. 创建可撤销的代理\n\n```javascript\nProxy.revocable();  => {proxy, revoke}\n\n调用revoke()即可撤销\n```\n","slug":"ES6-代理","published":1,"updated":"2018-08-05T14:34:19.521Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkgy94f10000egom2d4lje2v","content":"<blockquote>\n<p>学习了ES6中的代理. 代理赋予了开发者访问js底层的一些东西的能力, 还是挺好玩的, 不过有点多, 对比一下.</p>\n</blockquote>\n<ol>\n<li>一些比较</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>比较项</th>\n<th>反射方法</th>\n<th>Object的方法</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>set</td>\n<td>Reflect.set(trapTarget, key, value, redeiver)</td>\n<td>-</td>\n<td>拦截为对象属性赋值</td>\n</tr>\n<tr>\n<td>get</td>\n<td>Reflect.get(trapTraget, key, receiver)</td>\n<td>-</td>\n<td>拦截读取对象属性</td>\n</tr>\n<tr>\n<td>has</td>\n<td>Reflect.has(trapTarget, key)</td>\n<td>-</td>\n<td>拦截in操作</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>Reflect.deleteProperty(trapTarget,key)</td>\n<td>-</td>\n<td>拦截delete操作</td>\n</tr>\n<tr>\n<td>setPrototypeOf</td>\n<td>Reflect.setPrototypeOf(trapTarget, proto) 底层操作,返回Boolean表示操作是否成功,成功则true,失败则false</td>\n<td>Object.setPrototypeOf(trapTarget,proto) 上层操作, 操作失败直接抛出错误</td>\n<td>拦截setPrototypeOf操作</td>\n</tr>\n<tr>\n<td>getPrototypeOf</td>\n<td>Reflect.getPrototypeOf(trapTarget) 参数不是对象直接报错</td>\n<td>Object.getPrototypeOf(trapTarget),参数不是对象先转换成对象</td>\n<td>拦截getPrototypeOf操作</td>\n</tr>\n<tr>\n<td>preventExtensions</td>\n<td>Reflect.preventExtensions(trapTarget),参数不是对象报错,参数是对象返回true或false</td>\n<td>Object.preventExtensions(trapTarget),返回参数</td>\n<td>拦截preventExtensions</td>\n</tr>\n<tr>\n<td>isExtensible</td>\n<td>Reflect.isExtensible(target) 非对象直接报错</td>\n<td>Object.isExtensible(target) 非对象返回false</td>\n<td>拦截isExtensible</td>\n</tr>\n<tr>\n<td>defineProperty</td>\n<td>Reflect.defineProperty(trapTarget, key, descriptor) 返回true或false</td>\n<td>Object.defineProperty(trapTarget, key, descriptor) 出错时报错</td>\n<td>拦截defineProperty</td>\n</tr>\n<tr>\n<td>getOwnPropertyDescriptor</td>\n<td>Refect.getOwnPropertyDescriptor(trapTarget,key) 非对象报错</td>\n<td>Object.getOwnPropertyDescriptor(trapTarget,key) 非对象转换成对象</td>\n<td>enumerable,configurable,value,writable,get,set</td>\n</tr>\n<tr>\n<td>ownKeys</td>\n<td>Reflect.ownKeys(target)</td>\n<td>Object.keys(),Object.getOwnPropertyNames(),Object.assign(),Object.getOwnPropertySymbols()</td>\n<td>返回数组就好</td>\n</tr>\n<tr>\n<td>apply</td>\n<td>Reflect.apply(trapTarget,thisArg,argumentList)</td>\n<td>-</td>\n<td>拦截函数调用</td>\n</tr>\n<tr>\n<td>construct</td>\n<td>Reflect.construct(target,argumentList)</td>\n<td>-</td>\n<td>拦截new调用</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"2\">\n<li>创建可撤销的代理</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Proxy</span>.revocable();  =&gt; &#123;proxy, revoke&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">调用revoke()即可撤销</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>学习了ES6中的代理. 代理赋予了开发者访问js底层的一些东西的能力, 还是挺好玩的, 不过有点多, 对比一下.</p>\n</blockquote>\n<ol>\n<li>一些比较</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>比较项</th>\n<th>反射方法</th>\n<th>Object的方法</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>set</td>\n<td>Reflect.set(trapTarget, key, value, redeiver)</td>\n<td>-</td>\n<td>拦截为对象属性赋值</td>\n</tr>\n<tr>\n<td>get</td>\n<td>Reflect.get(trapTraget, key, receiver)</td>\n<td>-</td>\n<td>拦截读取对象属性</td>\n</tr>\n<tr>\n<td>has</td>\n<td>Reflect.has(trapTarget, key)</td>\n<td>-</td>\n<td>拦截in操作</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>Reflect.deleteProperty(trapTarget,key)</td>\n<td>-</td>\n<td>拦截delete操作</td>\n</tr>\n<tr>\n<td>setPrototypeOf</td>\n<td>Reflect.setPrototypeOf(trapTarget, proto) 底层操作,返回Boolean表示操作是否成功,成功则true,失败则false</td>\n<td>Object.setPrototypeOf(trapTarget,proto) 上层操作, 操作失败直接抛出错误</td>\n<td>拦截setPrototypeOf操作</td>\n</tr>\n<tr>\n<td>getPrototypeOf</td>\n<td>Reflect.getPrototypeOf(trapTarget) 参数不是对象直接报错</td>\n<td>Object.getPrototypeOf(trapTarget),参数不是对象先转换成对象</td>\n<td>拦截getPrototypeOf操作</td>\n</tr>\n<tr>\n<td>preventExtensions</td>\n<td>Reflect.preventExtensions(trapTarget),参数不是对象报错,参数是对象返回true或false</td>\n<td>Object.preventExtensions(trapTarget),返回参数</td>\n<td>拦截preventExtensions</td>\n</tr>\n<tr>\n<td>isExtensible</td>\n<td>Reflect.isExtensible(target) 非对象直接报错</td>\n<td>Object.isExtensible(target) 非对象返回false</td>\n<td>拦截isExtensible</td>\n</tr>\n<tr>\n<td>defineProperty</td>\n<td>Reflect.defineProperty(trapTarget, key, descriptor) 返回true或false</td>\n<td>Object.defineProperty(trapTarget, key, descriptor) 出错时报错</td>\n<td>拦截defineProperty</td>\n</tr>\n<tr>\n<td>getOwnPropertyDescriptor</td>\n<td>Refect.getOwnPropertyDescriptor(trapTarget,key) 非对象报错</td>\n<td>Object.getOwnPropertyDescriptor(trapTarget,key) 非对象转换成对象</td>\n<td>enumerable,configurable,value,writable,get,set</td>\n</tr>\n<tr>\n<td>ownKeys</td>\n<td>Reflect.ownKeys(target)</td>\n<td>Object.keys(),Object.getOwnPropertyNames(),Object.assign(),Object.getOwnPropertySymbols()</td>\n<td>返回数组就好</td>\n</tr>\n<tr>\n<td>apply</td>\n<td>Reflect.apply(trapTarget,thisArg,argumentList)</td>\n<td>-</td>\n<td>拦截函数调用</td>\n</tr>\n<tr>\n<td>construct</td>\n<td>Reflect.construct(target,argumentList)</td>\n<td>-</td>\n<td>拦截new调用</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"2\">\n<li>创建可撤销的代理</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Proxy</span>.revocable();  =&gt; &#123;proxy, revoke&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">调用revoke()即可撤销</span><br></pre></td></tr></table></figure>\n"},{"title":"hexo操作指南","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hexo操作指南.md","raw":"---\ntitle: hexo操作指南\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hexo操作指南","published":1,"date":"2018-07-07T10:30:43.628Z","updated":"2018-07-07T12:40:51.188Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkgy94f80002egom4yijvr8x","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"redux学习笔记","date":"2018-08-05T13:30:44.000Z","_content":"\n# 四个东西\n\n1. store\n\n一个存放应用所有状态的地方\n\n2. state\n应用的状态, 整体是个对象, 像这样  \n\n```javascript\n{\n  todos: [{\n    text: 'Eat food',\n    completed: true\n  }, {\n    text: 'Exercise',\n    completed: false\n  }],\n  visibilityFilter: 'SHOW_COMPLETED'\n}\n```\n\n3. action\n\n一个用于描述发生了某件事的对象, 像这样\n\n```javascript\n{type:'type', id:1...}\n```\n4. reducer\n用于描述一个事件发生后状态应该如何改变, 是一个纯函数. 根据action的type和参数得到新的state并return\n\n```\nreducer(state, action) {\n  return newState;\n}\n```\n\n------------------\n## 关于这几个的理解\n\n![redux几个概念的理解](/2018/08/redux学习笔记1.png)\n\n\n* 几个方法\n","source":"_posts/redux学习笔记.md","raw":"---\ntitle: redux学习笔记\ndate: 2018-08-05 21:30:44\ntags:\n---\n\n# 四个东西\n\n1. store\n\n一个存放应用所有状态的地方\n\n2. state\n应用的状态, 整体是个对象, 像这样  \n\n```javascript\n{\n  todos: [{\n    text: 'Eat food',\n    completed: true\n  }, {\n    text: 'Exercise',\n    completed: false\n  }],\n  visibilityFilter: 'SHOW_COMPLETED'\n}\n```\n\n3. action\n\n一个用于描述发生了某件事的对象, 像这样\n\n```javascript\n{type:'type', id:1...}\n```\n4. reducer\n用于描述一个事件发生后状态应该如何改变, 是一个纯函数. 根据action的type和参数得到新的state并return\n\n```\nreducer(state, action) {\n  return newState;\n}\n```\n\n------------------\n## 关于这几个的理解\n\n![redux几个概念的理解](/2018/08/redux学习笔记1.png)\n\n\n* 几个方法\n","slug":"redux学习笔记","published":1,"updated":"2018-08-05T14:21:26.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkgy94fd0005egomtdun59sv","content":"<h1 id=\"四个东西\"><a href=\"#四个东西\" class=\"headerlink\" title=\"四个东西\"></a>四个东西</h1><ol>\n<li>store</li>\n</ol>\n<p>一个存放应用所有状态的地方</p>\n<ol start=\"2\">\n<li>state<br>应用的状态, 整体是个对象, 像这样  </li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  todos: [&#123;</span><br><span class=\"line\">    text: <span class=\"string\">'Eat food'</span>,</span><br><span class=\"line\">    completed: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">    text: <span class=\"string\">'Exercise'</span>,</span><br><span class=\"line\">    completed: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;],</span><br><span class=\"line\">  visibilityFilter: <span class=\"string\">'SHOW_COMPLETED'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>action</li>\n</ol>\n<p>一个用于描述发生了某件事的对象, 像这样</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">type</span>:<span class=\"string\">'type'</span>, <span class=\"attr\">id</span>:<span class=\"number\">1.</span>..&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>reducer<br>用于描述一个事件发生后状态应该如何改变, 是一个纯函数. 根据action的type和参数得到新的state并return</li>\n</ol>\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reducer(<span class=\"keyword\">state</span>, action) &#123;</span><br><span class=\"line\">  return newState;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"关于这几个的理解\"><a href=\"#关于这几个的理解\" class=\"headerlink\" title=\"关于这几个的理解\"></a>关于这几个的理解</h2><p><img src=\"/2018/08/redux学习笔记1.png\" alt=\"redux几个概念的理解\"></p>\n<ul>\n<li>几个方法</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"四个东西\"><a href=\"#四个东西\" class=\"headerlink\" title=\"四个东西\"></a>四个东西</h1><ol>\n<li>store</li>\n</ol>\n<p>一个存放应用所有状态的地方</p>\n<ol start=\"2\">\n<li>state<br>应用的状态, 整体是个对象, 像这样  </li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  todos: [&#123;</span><br><span class=\"line\">    text: <span class=\"string\">'Eat food'</span>,</span><br><span class=\"line\">    completed: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">    text: <span class=\"string\">'Exercise'</span>,</span><br><span class=\"line\">    completed: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;],</span><br><span class=\"line\">  visibilityFilter: <span class=\"string\">'SHOW_COMPLETED'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>action</li>\n</ol>\n<p>一个用于描述发生了某件事的对象, 像这样</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">type</span>:<span class=\"string\">'type'</span>, <span class=\"attr\">id</span>:<span class=\"number\">1.</span>..&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>reducer<br>用于描述一个事件发生后状态应该如何改变, 是一个纯函数. 根据action的type和参数得到新的state并return</li>\n</ol>\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reducer(<span class=\"keyword\">state</span>, action) &#123;</span><br><span class=\"line\">  return newState;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"关于这几个的理解\"><a href=\"#关于这几个的理解\" class=\"headerlink\" title=\"关于这几个的理解\"></a>关于这几个的理解</h2><p><img src=\"/2018/08/redux学习笔记1.png\" alt=\"redux几个概念的理解\"></p>\n<ul>\n<li>几个方法</li>\n</ul>\n"},{"title":"ES6-模块","date":"2018-07-08T03:02:23.000Z","_content":"\n> 一直在用ES6的模块机制, 现在系统学习下, 记录一下.\n\n## ES6模块的特性\n\n- 自动运行在严格模式下\n- 是一个隔离的作用域, 不会污染全局\n- 模块顶层作用域没有this, this为undefined\n- 导出的才能被方法, 没有导出的相当于是模块私有的\n\n## 模块的定义\n \n  模块的定义和普通js代码并没有太大区别, 只是多了一个导出的操作. \n\n  ```javascript\n  1. first.js\n  export function fn1() {};\n  export const a = 1;\n  export class A {};\n\n  // 可以导出 函数, 变量, 和类\n\n  2. second.js\n  function fn1() {}\n  export fn1;\n\n  // 可以这样直接导出引用\n\n  3. third.js\n  function fn1() {};\n  export fn1 as fn2;\n\n  // 可以用as指定导出的别名\n\n  4. forth.js\n\n  function fn1() {};\n  const a = 1;\n  export default fn1;\n  export a;\n\n  // 可以这样导出一个默认的东西\n\n  ```\n\n## 模块的导入\n  模块的导入使用的是import语句, 分为几种情况:\n  - 普通导入\n  - 全部导入\n  - 导入一部分\n  - 定义导入别名\n  - 导入默认导出的\n  - 同时导入默认导出的和非默认导出的\n\n  *默认的必须在非默认的前面*\n  ```javascript\n  import {fn1, a, A} from './first.js';\n  import * as F from './first.js';\n  import {fn1} from './first.js';\n  import {fn1 as fn2} from './first.js';\n  import fn1 from 'forth.js';\n  import fn1, {a} from 'forth.js';\n\n  ```\n## 模块的加载顺序\n\n1. 有三种方式可以将模块放到html中\n\n```javascript\n1. <script type=\"module\" src = './a.js'></script>\n2. \n<script type=\"module\">\n  import {fn1} from './first.js';\n\n</script>\n3. 通过worker\nlet worker = new Worder('a.js', {type:'module'});\n区别,无法通过self.importScripts()加载其他模块\n\n```\n2. 这些模块会顺序加载, 如果有引入其他的模块则递归加载\n\n3. 会被加上defer属性, 所以会在文档加载完成后顺序执行, 同样,如果有引入其他模块会递归执行\n\n## 模块与脚本的对比\n| 项目 | 模块 | 脚本|\n|:---:|:---:|:----:|\n|作用域|一个模块是一个作用域|全局作用域|\n|严格非严格|默认就是严格模式|需要加use strict 才进入严格模式|\n|引入方式|type为module|type为text/javasctipt|\n\n## 一些值得注意的地方\n- 模块导入的东西不能再改变引用\n- 模块的导入路径开头必须为., ./或/, 或者直接是url,否则不能解析\n\n------------------------\n\n参考:\n\n- <深入理解ES6>\n\n","source":"_posts/ES6-模块.md","raw":"---\ntitle: ES6-模块\ndate: 2018-07-08 11:02:23\ntags: [ES6,js]\n---\n\n> 一直在用ES6的模块机制, 现在系统学习下, 记录一下.\n\n## ES6模块的特性\n\n- 自动运行在严格模式下\n- 是一个隔离的作用域, 不会污染全局\n- 模块顶层作用域没有this, this为undefined\n- 导出的才能被方法, 没有导出的相当于是模块私有的\n\n## 模块的定义\n \n  模块的定义和普通js代码并没有太大区别, 只是多了一个导出的操作. \n\n  ```javascript\n  1. first.js\n  export function fn1() {};\n  export const a = 1;\n  export class A {};\n\n  // 可以导出 函数, 变量, 和类\n\n  2. second.js\n  function fn1() {}\n  export fn1;\n\n  // 可以这样直接导出引用\n\n  3. third.js\n  function fn1() {};\n  export fn1 as fn2;\n\n  // 可以用as指定导出的别名\n\n  4. forth.js\n\n  function fn1() {};\n  const a = 1;\n  export default fn1;\n  export a;\n\n  // 可以这样导出一个默认的东西\n\n  ```\n\n## 模块的导入\n  模块的导入使用的是import语句, 分为几种情况:\n  - 普通导入\n  - 全部导入\n  - 导入一部分\n  - 定义导入别名\n  - 导入默认导出的\n  - 同时导入默认导出的和非默认导出的\n\n  *默认的必须在非默认的前面*\n  ```javascript\n  import {fn1, a, A} from './first.js';\n  import * as F from './first.js';\n  import {fn1} from './first.js';\n  import {fn1 as fn2} from './first.js';\n  import fn1 from 'forth.js';\n  import fn1, {a} from 'forth.js';\n\n  ```\n## 模块的加载顺序\n\n1. 有三种方式可以将模块放到html中\n\n```javascript\n1. <script type=\"module\" src = './a.js'></script>\n2. \n<script type=\"module\">\n  import {fn1} from './first.js';\n\n</script>\n3. 通过worker\nlet worker = new Worder('a.js', {type:'module'});\n区别,无法通过self.importScripts()加载其他模块\n\n```\n2. 这些模块会顺序加载, 如果有引入其他的模块则递归加载\n\n3. 会被加上defer属性, 所以会在文档加载完成后顺序执行, 同样,如果有引入其他模块会递归执行\n\n## 模块与脚本的对比\n| 项目 | 模块 | 脚本|\n|:---:|:---:|:----:|\n|作用域|一个模块是一个作用域|全局作用域|\n|严格非严格|默认就是严格模式|需要加use strict 才进入严格模式|\n|引入方式|type为module|type为text/javasctipt|\n\n## 一些值得注意的地方\n- 模块导入的东西不能再改变引用\n- 模块的导入路径开头必须为., ./或/, 或者直接是url,否则不能解析\n\n------------------------\n\n参考:\n\n- <深入理解ES6>\n\n","slug":"ES6-模块","published":1,"updated":"2018-08-05T14:34:19.521Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkgy94fe0006egom3lc988jf","content":"<blockquote>\n<p>一直在用ES6的模块机制, 现在系统学习下, 记录一下.</p>\n</blockquote>\n<h2 id=\"ES6模块的特性\"><a href=\"#ES6模块的特性\" class=\"headerlink\" title=\"ES6模块的特性\"></a>ES6模块的特性</h2><ul>\n<li>自动运行在严格模式下</li>\n<li>是一个隔离的作用域, 不会污染全局</li>\n<li>模块顶层作用域没有this, this为undefined</li>\n<li>导出的才能被方法, 没有导出的相当于是模块私有的</li>\n</ul>\n<h2 id=\"模块的定义\"><a href=\"#模块的定义\" class=\"headerlink\" title=\"模块的定义\"></a>模块的定义</h2><p>  模块的定义和普通js代码并没有太大区别, 只是多了一个导出的操作. </p>\n  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> first.js</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可以导出 函数, 变量, 和类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> second.js</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> fn1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可以这样直接导出引用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> third.js</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">export</span> fn1 <span class=\"keyword\">as</span> fn2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可以用as指定导出的别名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4.</span> forth.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> fn1;</span><br><span class=\"line\"><span class=\"keyword\">export</span> a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可以这样导出一个默认的东西</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模块的导入\"><a href=\"#模块的导入\" class=\"headerlink\" title=\"模块的导入\"></a>模块的导入</h2><p>  模块的导入使用的是import语句, 分为几种情况:</p>\n<ul>\n<li>普通导入</li>\n<li>全部导入</li>\n<li>导入一部分</li>\n<li>定义导入别名</li>\n<li>导入默认导出的</li>\n<li><p>同时导入默认导出的和非默认导出的</p>\n<p><em>默认的必须在非默认的前面</em></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;fn1, a, A&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./first.js'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> F <span class=\"keyword\">from</span> <span class=\"string\">'./first.js'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;fn1&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./first.js'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;fn1 <span class=\"keyword\">as</span> fn2&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./first.js'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> fn1 <span class=\"keyword\">from</span> <span class=\"string\">'forth.js'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> fn1, &#123;a&#125; <span class=\"keyword\">from</span> <span class=\"string\">'forth.js'</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"模块的加载顺序\"><a href=\"#模块的加载顺序\" class=\"headerlink\" title=\"模块的加载顺序\"></a>模块的加载顺序</h2><ol>\n<li>有三种方式可以将模块放到html中</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> &lt;script type=<span class=\"string\">\"module\"</span> src = <span class=\"string\">'./a.js'</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"number\">2.</span> </span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"module\"</span>&gt;</span><br><span class=\"line\">  <span class=\"keyword\">import</span> &#123;fn1&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./first.js'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">3. 通过worker</span></span><br><span class=\"line\"><span class=\"regexp\">let worker = new Worder('a.js', &#123;type:'module'&#125;);</span></span><br><span class=\"line\"><span class=\"regexp\">区别,无法通过self.importScripts()加载其他模块</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><p>这些模块会顺序加载, 如果有引入其他的模块则递归加载</p>\n</li>\n<li><p>会被加上defer属性, 所以会在文档加载完成后顺序执行, 同样,如果有引入其他模块会递归执行</p>\n</li>\n</ol>\n<h2 id=\"模块与脚本的对比\"><a href=\"#模块与脚本的对比\" class=\"headerlink\" title=\"模块与脚本的对比\"></a>模块与脚本的对比</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">项目</th>\n<th style=\"text-align:center\">模块</th>\n<th style=\"text-align:center\">脚本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">作用域</td>\n<td style=\"text-align:center\">一个模块是一个作用域</td>\n<td style=\"text-align:center\">全局作用域</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">严格非严格</td>\n<td style=\"text-align:center\">默认就是严格模式</td>\n<td style=\"text-align:center\">需要加use strict 才进入严格模式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">引入方式</td>\n<td style=\"text-align:center\">type为module</td>\n<td style=\"text-align:center\">type为text/javasctipt</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"一些值得注意的地方\"><a href=\"#一些值得注意的地方\" class=\"headerlink\" title=\"一些值得注意的地方\"></a>一些值得注意的地方</h2><ul>\n<li>模块导入的东西不能再改变引用</li>\n<li>模块的导入路径开头必须为., ./或/, 或者直接是url,否则不能解析</li>\n</ul>\n<hr>\n<p>参考:</p>\n<ul>\n<li>&lt;深入理解ES6&gt;</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>一直在用ES6的模块机制, 现在系统学习下, 记录一下.</p>\n</blockquote>\n<h2 id=\"ES6模块的特性\"><a href=\"#ES6模块的特性\" class=\"headerlink\" title=\"ES6模块的特性\"></a>ES6模块的特性</h2><ul>\n<li>自动运行在严格模式下</li>\n<li>是一个隔离的作用域, 不会污染全局</li>\n<li>模块顶层作用域没有this, this为undefined</li>\n<li>导出的才能被方法, 没有导出的相当于是模块私有的</li>\n</ul>\n<h2 id=\"模块的定义\"><a href=\"#模块的定义\" class=\"headerlink\" title=\"模块的定义\"></a>模块的定义</h2><p>  模块的定义和普通js代码并没有太大区别, 只是多了一个导出的操作. </p>\n  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> first.js</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可以导出 函数, 变量, 和类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> second.js</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> fn1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可以这样直接导出引用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> third.js</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">export</span> fn1 <span class=\"keyword\">as</span> fn2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可以用as指定导出的别名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4.</span> forth.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> fn1;</span><br><span class=\"line\"><span class=\"keyword\">export</span> a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可以这样导出一个默认的东西</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模块的导入\"><a href=\"#模块的导入\" class=\"headerlink\" title=\"模块的导入\"></a>模块的导入</h2><p>  模块的导入使用的是import语句, 分为几种情况:</p>\n<ul>\n<li>普通导入</li>\n<li>全部导入</li>\n<li>导入一部分</li>\n<li>定义导入别名</li>\n<li>导入默认导出的</li>\n<li><p>同时导入默认导出的和非默认导出的</p>\n<p><em>默认的必须在非默认的前面</em></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;fn1, a, A&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./first.js'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> F <span class=\"keyword\">from</span> <span class=\"string\">'./first.js'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;fn1&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./first.js'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;fn1 <span class=\"keyword\">as</span> fn2&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./first.js'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> fn1 <span class=\"keyword\">from</span> <span class=\"string\">'forth.js'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> fn1, &#123;a&#125; <span class=\"keyword\">from</span> <span class=\"string\">'forth.js'</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"模块的加载顺序\"><a href=\"#模块的加载顺序\" class=\"headerlink\" title=\"模块的加载顺序\"></a>模块的加载顺序</h2><ol>\n<li>有三种方式可以将模块放到html中</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> &lt;script type=<span class=\"string\">\"module\"</span> src = <span class=\"string\">'./a.js'</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"number\">2.</span> </span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"module\"</span>&gt;</span><br><span class=\"line\">  <span class=\"keyword\">import</span> &#123;fn1&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./first.js'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">3. 通过worker</span></span><br><span class=\"line\"><span class=\"regexp\">let worker = new Worder('a.js', &#123;type:'module'&#125;);</span></span><br><span class=\"line\"><span class=\"regexp\">区别,无法通过self.importScripts()加载其他模块</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><p>这些模块会顺序加载, 如果有引入其他的模块则递归加载</p>\n</li>\n<li><p>会被加上defer属性, 所以会在文档加载完成后顺序执行, 同样,如果有引入其他模块会递归执行</p>\n</li>\n</ol>\n<h2 id=\"模块与脚本的对比\"><a href=\"#模块与脚本的对比\" class=\"headerlink\" title=\"模块与脚本的对比\"></a>模块与脚本的对比</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">项目</th>\n<th style=\"text-align:center\">模块</th>\n<th style=\"text-align:center\">脚本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">作用域</td>\n<td style=\"text-align:center\">一个模块是一个作用域</td>\n<td style=\"text-align:center\">全局作用域</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">严格非严格</td>\n<td style=\"text-align:center\">默认就是严格模式</td>\n<td style=\"text-align:center\">需要加use strict 才进入严格模式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">引入方式</td>\n<td style=\"text-align:center\">type为module</td>\n<td style=\"text-align:center\">type为text/javasctipt</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"一些值得注意的地方\"><a href=\"#一些值得注意的地方\" class=\"headerlink\" title=\"一些值得注意的地方\"></a>一些值得注意的地方</h2><ul>\n<li>模块导入的东西不能再改变引用</li>\n<li>模块的导入路径开头必须为., ./或/, 或者直接是url,否则不能解析</li>\n</ul>\n<hr>\n<p>参考:</p>\n<ul>\n<li>&lt;深入理解ES6&gt;</li>\n</ul>\n"},{"title":"redux-saga学习笔记","date":"2018-08-05T13:31:06.000Z","_content":"","source":"_posts/redux-saga学习笔记.md","raw":"---\ntitle: redux-saga学习笔记\ndate: 2018-08-05 21:31:06\ntags:\n---\n","slug":"redux-saga学习笔记","published":1,"updated":"2018-08-05T13:31:06.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkgy94ff0007egomfv72vcg8","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"记一次苦逼的找bug经历","date":"2018-07-09T13:50:53.000Z","_content":"## 背景\n\n公司项目的模式是后端给给模板塞一些静态数据, 加载前端放在cdn上的js,css, js负责动态的构建整个dom, 采用的框架是React. 某日需要添加一个新的页面, 遂写了一个模板html给server, 写好了js,css的路径, 让他response出来. 折腾了一下午, js文件正常加载, css正常加载, 可是整个页面空空如也, html里边只有个id为app的div(ps: 这是一个范式了, 我们会用react做, 往这个app里填东西).\n\n## 漫长的bug寻找过程\n\n1. 是有缓存吗?\n\n我甚至将所有近七天的浏览器数据都清除了, 重启Fiddler, 勾选disable cache. 反正能试的我都试了.\n\n2. 是打包出问题了吗?\n\n用的是webpack打包的, 我尝试去加个alert(3), 然后在打包后的文件去搜索, 发现是能搜索到的?\n\n3. 是不是我里边的小组件有问题?\n\n我尝试在根级组件加了乱七八糟的东西, 结果还是啥都没有?\n\n4. 是不是还有其他的依赖没有下载下来?\n\n我将他的network与其他页面的对比, 试图发现不同, 但并没有对结果又影响的不同.\n\n5. 还是问问老大吧?\n\n我厚着脸皮发微信问老大, 然而,,,他在开会, 还开了很久.\n\n## 终于找到了\n\n就在我几近崩溃之时, 我趴在桌上还html结构发现,,,,原来是这里. 我的HTML在浏览器显示是这样的.\n\n```html\n<scritp src = 'aaa.js'></script>\n</body>\n</script>\n```\n\n在看我给后端的模板, 发现我写成了这样.\n\n```html\n<scritp src = 'aaa.js' />\n```\n\n哎哎哎, 害死人啊. 这样写浏览器会照常下载, 但构建的html结构不对, 引入的文件也不会执行.\n\n## 总结一下\n\n应该正确使用html标签, 该是自闭合的就得自闭合, 该写两个标签闭合的就写两个标签闭合. 不要因为几次写错标签找瞎了眼, 找白了头.\n\n------------","source":"_posts/记一次苦逼的找bug经历.md","raw":"---\ntitle: 记一次苦逼的找bug经历\ndate: 2018-07-09 21:50:53\ntags: [坑, 开发记录]\n---\n## 背景\n\n公司项目的模式是后端给给模板塞一些静态数据, 加载前端放在cdn上的js,css, js负责动态的构建整个dom, 采用的框架是React. 某日需要添加一个新的页面, 遂写了一个模板html给server, 写好了js,css的路径, 让他response出来. 折腾了一下午, js文件正常加载, css正常加载, 可是整个页面空空如也, html里边只有个id为app的div(ps: 这是一个范式了, 我们会用react做, 往这个app里填东西).\n\n## 漫长的bug寻找过程\n\n1. 是有缓存吗?\n\n我甚至将所有近七天的浏览器数据都清除了, 重启Fiddler, 勾选disable cache. 反正能试的我都试了.\n\n2. 是打包出问题了吗?\n\n用的是webpack打包的, 我尝试去加个alert(3), 然后在打包后的文件去搜索, 发现是能搜索到的?\n\n3. 是不是我里边的小组件有问题?\n\n我尝试在根级组件加了乱七八糟的东西, 结果还是啥都没有?\n\n4. 是不是还有其他的依赖没有下载下来?\n\n我将他的network与其他页面的对比, 试图发现不同, 但并没有对结果又影响的不同.\n\n5. 还是问问老大吧?\n\n我厚着脸皮发微信问老大, 然而,,,他在开会, 还开了很久.\n\n## 终于找到了\n\n就在我几近崩溃之时, 我趴在桌上还html结构发现,,,,原来是这里. 我的HTML在浏览器显示是这样的.\n\n```html\n<scritp src = 'aaa.js'></script>\n</body>\n</script>\n```\n\n在看我给后端的模板, 发现我写成了这样.\n\n```html\n<scritp src = 'aaa.js' />\n```\n\n哎哎哎, 害死人啊. 这样写浏览器会照常下载, 但构建的html结构不对, 引入的文件也不会执行.\n\n## 总结一下\n\n应该正确使用html标签, 该是自闭合的就得自闭合, 该写两个标签闭合的就写两个标签闭合. 不要因为几次写错标签找瞎了眼, 找白了头.\n\n------------","slug":"记一次苦逼的找bug经历","published":1,"updated":"2018-08-05T14:34:19.521Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkgy94fh0009egomcor87ymx","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>公司项目的模式是后端给给模板塞一些静态数据, 加载前端放在cdn上的js,css, js负责动态的构建整个dom, 采用的框架是React. 某日需要添加一个新的页面, 遂写了一个模板html给server, 写好了js,css的路径, 让他response出来. 折腾了一下午, js文件正常加载, css正常加载, 可是整个页面空空如也, html里边只有个id为app的div(ps: 这是一个范式了, 我们会用react做, 往这个app里填东西).</p>\n<h2 id=\"漫长的bug寻找过程\"><a href=\"#漫长的bug寻找过程\" class=\"headerlink\" title=\"漫长的bug寻找过程\"></a>漫长的bug寻找过程</h2><ol>\n<li>是有缓存吗?</li>\n</ol>\n<p>我甚至将所有近七天的浏览器数据都清除了, 重启Fiddler, 勾选disable cache. 反正能试的我都试了.</p>\n<ol start=\"2\">\n<li>是打包出问题了吗?</li>\n</ol>\n<p>用的是webpack打包的, 我尝试去加个alert(3), 然后在打包后的文件去搜索, 发现是能搜索到的?</p>\n<ol start=\"3\">\n<li>是不是我里边的小组件有问题?</li>\n</ol>\n<p>我尝试在根级组件加了乱七八糟的东西, 结果还是啥都没有?</p>\n<ol start=\"4\">\n<li>是不是还有其他的依赖没有下载下来?</li>\n</ol>\n<p>我将他的network与其他页面的对比, 试图发现不同, 但并没有对结果又影响的不同.</p>\n<ol start=\"5\">\n<li>还是问问老大吧?</li>\n</ol>\n<p>我厚着脸皮发微信问老大, 然而,,,他在开会, 还开了很久.</p>\n<h2 id=\"终于找到了\"><a href=\"#终于找到了\" class=\"headerlink\" title=\"终于找到了\"></a>终于找到了</h2><p>就在我几近崩溃之时, 我趴在桌上还html结构发现,,,,原来是这里. 我的HTML在浏览器显示是这样的.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">scritp</span> <span class=\"attr\">src</span> = <span class=\"string\">'aaa.js'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在看我给后端的模板, 发现我写成了这样.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">scritp</span> <span class=\"attr\">src</span> = <span class=\"string\">'aaa.js'</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>哎哎哎, 害死人啊. 这样写浏览器会照常下载, 但构建的html结构不对, 引入的文件也不会执行.</p>\n<h2 id=\"总结一下\"><a href=\"#总结一下\" class=\"headerlink\" title=\"总结一下\"></a>总结一下</h2><p>应该正确使用html标签, 该是自闭合的就得自闭合, 该写两个标签闭合的就写两个标签闭合. 不要因为几次写错标签找瞎了眼, 找白了头.</p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>公司项目的模式是后端给给模板塞一些静态数据, 加载前端放在cdn上的js,css, js负责动态的构建整个dom, 采用的框架是React. 某日需要添加一个新的页面, 遂写了一个模板html给server, 写好了js,css的路径, 让他response出来. 折腾了一下午, js文件正常加载, css正常加载, 可是整个页面空空如也, html里边只有个id为app的div(ps: 这是一个范式了, 我们会用react做, 往这个app里填东西).</p>\n<h2 id=\"漫长的bug寻找过程\"><a href=\"#漫长的bug寻找过程\" class=\"headerlink\" title=\"漫长的bug寻找过程\"></a>漫长的bug寻找过程</h2><ol>\n<li>是有缓存吗?</li>\n</ol>\n<p>我甚至将所有近七天的浏览器数据都清除了, 重启Fiddler, 勾选disable cache. 反正能试的我都试了.</p>\n<ol start=\"2\">\n<li>是打包出问题了吗?</li>\n</ol>\n<p>用的是webpack打包的, 我尝试去加个alert(3), 然后在打包后的文件去搜索, 发现是能搜索到的?</p>\n<ol start=\"3\">\n<li>是不是我里边的小组件有问题?</li>\n</ol>\n<p>我尝试在根级组件加了乱七八糟的东西, 结果还是啥都没有?</p>\n<ol start=\"4\">\n<li>是不是还有其他的依赖没有下载下来?</li>\n</ol>\n<p>我将他的network与其他页面的对比, 试图发现不同, 但并没有对结果又影响的不同.</p>\n<ol start=\"5\">\n<li>还是问问老大吧?</li>\n</ol>\n<p>我厚着脸皮发微信问老大, 然而,,,他在开会, 还开了很久.</p>\n<h2 id=\"终于找到了\"><a href=\"#终于找到了\" class=\"headerlink\" title=\"终于找到了\"></a>终于找到了</h2><p>就在我几近崩溃之时, 我趴在桌上还html结构发现,,,,原来是这里. 我的HTML在浏览器显示是这样的.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">scritp</span> <span class=\"attr\">src</span> = <span class=\"string\">'aaa.js'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在看我给后端的模板, 发现我写成了这样.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">scritp</span> <span class=\"attr\">src</span> = <span class=\"string\">'aaa.js'</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>哎哎哎, 害死人啊. 这样写浏览器会照常下载, 但构建的html结构不对, 引入的文件也不会执行.</p>\n<h2 id=\"总结一下\"><a href=\"#总结一下\" class=\"headerlink\" title=\"总结一下\"></a>总结一下</h2><p>应该正确使用html标签, 该是自闭合的就得自闭合, 该写两个标签闭合的就写两个标签闭合. 不要因为几次写错标签找瞎了眼, 找白了头.</p>\n<hr>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjkgy94f10000egom2d4lje2v","tag_id":"cjkgy94fb0004egomegs0254m","_id":"cjkgy94fj000begom6yoc0zep"},{"post_id":"cjkgy94f10000egom2d4lje2v","tag_id":"cjkgy94fg0008egombvymwkn1","_id":"cjkgy94fk000cegomege6bsgc"},{"post_id":"cjkgy94fe0006egom3lc988jf","tag_id":"cjkgy94fb0004egomegs0254m","_id":"cjkgy94fk000eegom1vdaogah"},{"post_id":"cjkgy94fe0006egom3lc988jf","tag_id":"cjkgy94fg0008egombvymwkn1","_id":"cjkgy94fl000fegome2jseq9b"},{"post_id":"cjkgy94fh0009egomcor87ymx","tag_id":"cjkgy94fk000degomsdn111hw","_id":"cjkgy94fm000hegom4gw494a9"},{"post_id":"cjkgy94fh0009egomcor87ymx","tag_id":"cjkgy94fl000gegomi7rtgi37","_id":"cjkgy94fm000iegomh53yqu9q"}],"Tag":[{"name":"ES6","_id":"cjkgy94fb0004egomegs0254m"},{"name":"js","_id":"cjkgy94fg0008egombvymwkn1"},{"name":"坑","_id":"cjkgy94fk000degomsdn111hw"},{"name":"开发记录","_id":"cjkgy94fl000gegomi7rtgi37"}]}}